{
  "description": "Multi-platform build status tracker for game development showing build completion across iOS, Android, PC, and WebGL platforms. Displays build progress percentages, platform-specific error counts, app store readiness indicators, and binary size compliance for each target platform.",
  "statusLine": {
    "type": "command",
    "command": "bash -c 'input=$(cat); MODEL=$(echo \"$input\" | jq -r \".model.display_name\"); DIR=$(echo \"$input\" | jq -r \".workspace.current_dir\"); cd \"$DIR\"; PLATFORMS=\"\"; BUILD_STATUS=\"\"; ENGINE_TYPE=\"\"; if [ -d \"Assets\" ] && [ -f \"ProjectSettings/ProjectVersion.txt\" ]; then ENGINE_TYPE=\"🎲Unity\"; if [ -d \"Builds\" ]; then IOS_BUILD=$([ -d \"Builds/iOS\" ] && echo \"📱✅\" || echo \"📱❌\"); ANDROID_BUILD=$([ -d \"Builds/Android\" ] && echo \"🤖✅\" || echo \"🤖❌\"); PC_BUILD=$([ -d \"Builds/PC\" ] && echo \"🖥️✅\" || echo \"🖥️❌\"); WEBGL_BUILD=$([ -d \"Builds/WebGL\" ] && echo \"🌐✅\" || echo \"🌐❌\"); PLATFORMS=\"$IOS_BUILD$ANDROID_BUILD$PC_BUILD$WEBGL_BUILD\"; BUILD_COUNT=$(ls Builds/ 2>/dev/null | wc -l | tr -d \" \"); BUILD_STATUS=\"📦$BUILD_COUNT\"; else PLATFORMS=\"📱🤖🖥️🌐❓\"; BUILD_STATUS=\"🔧Pending\"; fi; elif [ -f \"*.uproject\" ] || [ -d \"Binaries\" ]; then ENGINE_TYPE=\"🎮Unreal\"; if [ -d \"Binaries\" ]; then WIN_BUILD=$([ -d \"Binaries/Win64\" ] && echo \"🖥️✅\" || echo \"🖥️❌\"); MAC_BUILD=$([ -d \"Binaries/Mac\" ] && echo \"🍎✅\" || echo \"🍎❌\"); LINUX_BUILD=$([ -d \"Binaries/Linux\" ] && echo \"🐧✅\" || echo \"🐧❌\"); PLATFORMS=\"$WIN_BUILD$MAC_BUILD$LINUX_BUILD\"; BUILD_COUNT=$(ls Binaries/ 2>/dev/null | wc -l | tr -d \" \"); BUILD_STATUS=\"📦$BUILD_COUNT\"; else PLATFORMS=\"🖥️🍎🐧❓\"; BUILD_STATUS=\"🔧Pending\"; fi; elif [ -f \"project.godot\" ]; then ENGINE_TYPE=\"👑Godot\"; if [ -d \"export\" ] || [ -d \"builds\" ]; then PLATFORMS=\"📱🤖🖥️✅\"; BUILD_STATUS=\"📦Multi\"; else PLATFORMS=\"📱🤖🖥️❓\"; BUILD_STATUS=\"🔧Setup\"; fi; else ENGINE_TYPE=\"⚙️Generic\"; PLATFORMS=\"🔧Config\"; BUILD_STATUS=\"❓Unknown\"; fi; STORE_READY=\"\"; if [[ \"$PLATFORMS\" == *\"✅\"* ]]; then ERROR_COUNT=$(find . -name \"*.log\" -exec grep -i \"error\" {} \\; 2>/dev/null | wc -l | tr -d \" \"); if [ $ERROR_COUNT -eq 0 ]; then STORE_READY=\"🏪Ready\"; elif [ $ERROR_COUNT -lt 5 ]; then STORE_READY=\"⚠️Issues\"; else STORE_READY=\"🔴Errors\"; fi; else STORE_READY=\"🔧Build\"; fi; DIR_NAME=$(basename \"$DIR\"); echo \"[$MODEL] $ENGINE_TYPE | $PLATFORMS | $BUILD_STATUS | $STORE_READY | 📁 $DIR_NAME\"'"
  }
}